openapi: 3.0.3
info:
  title: sharing
  description: Sharing has a really interesting name
  version: 1.0.0
servers:
  - url: "http://sharing/api/v1"
    description: server
paths:
  /sign/in:
    post:
      tags:
        - Users
      summary: Authenticate user and login
      operationId: login
      security:
        - {}
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginReply"
  /sign/up:
    post:
      tags:
        - Users
      summary: Register a new user
      operationId: register
      security:
        - {}
      requestBody:
        description: User information for registration
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterReply"
  /users/{user_id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      operationId: getUser
      security:
        - {}
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          description: ID of the user to retrieve
          required: true
          schema:
            type: string
            format: int64
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
  /users:
    get:
      tags:
        - Users
      summary: Get users
      operationId: getUsers
      security:
        - {}
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: false
          schema:
            type: string
        - name: ids
          in: query
          description: IDs of the users to retrieve
          required: false
          schema:
            type: array
            items:
              type: string
              format: int64
      responses:
        "200":
          description: User object
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
    patch:
      tags:
        - Users
      summary: Update user profile
      operationId: updateProfile
      parameters:
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileReq"
      responses:
        "200":
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
  /users/{user_id}/followers:
    post:
      tags:
        - Users
      summary: Get followers of a user
      operationId: getFollowers
      security:
        - {}
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: false
          schema:
            type: string
        - name: user_id
          in: path
          description: ID of the user to retrieve
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          description: page number
          required: false
          schema:
            type: string
            format: int64
        - name: limit
          in: query
          description: limit number
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersPage"

  /users/{user_id}/following:
    post:
      tags:
        - Users
      summary: Get users followed by a user
      operationId: getFollowing
      security:
        - {}
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: false
          schema:
            type: string
        - name: user_id
          in: path
          description: ID of the user to retrieve
          required: true
          schema:
            type: string
            format: int64
        - name: page
          in: query
          description: page number
          required: false
          schema:
            type: string
            format: int64
        - name: limit
          in: query
          description: limit number
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersPage"
  /assets/new:
    post:
      tags:
        - Asserts
      summary: generate new asset pre-signed url to upload
      operationId: newAsset
      requestBody:
        description: asset information
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewAssetRequest"
      responses:
        "200":
          description: asset object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewAssetReply"
  /follow:
    post:
      tags:
        - Users
      summary: Follow or unfollow a user
      operationId: followAction
      parameters:
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: true
          schema:
            type: string
      requestBody:
        description: User ID and action to perform
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FollowActionRequest"
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FollowActionReply"
  "/users/{userId}/videos":
    get:
      tags:
        - Content
      operationId: getUserVideos
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          style: form
          schema:
            type: integer
            format: int64
        - name: size
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoDtoPagination"
  "/users/{userId}/likes":
    get:
      tags:
        - Content
      operationId: getUserLikes
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          style: form
          schema:
            type: integer
            format: int64
        - name: size
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoDtoPagination"
  /videos:
    get:
      tags:
        - Content
      operationId: getVideos
      parameters:
        - name: page
          in: query
          style: form
          schema:
            type: integer
            format: int64
        - name: size
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoDtoPagination"
    post:
      tags:
        - Content
      operationId: createVideo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VideoRequest"
        required: true
      responses:
        "200":
          description: Success
  /videos/popular:
    post:
      tags:
        - Content
      operationId: getDailyPopularVideos
      parameters:
        - name: page
          in: query
          style: form
          schema:
            type: integer
            format: int64
        - name: size
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoDtoPagination"
  /votes:
    post:
      tags:
        - Content
      operationId: vote
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoteRequest"
        required: true
      responses:
        "200":
          description: Success
  /votes/cancel:
    post:
      tags:
        - Content
      operationId: cancelVote
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoteRequest"
        required: true
      responses:
        "200":
          description: Success
  /messages:
    get:
      tags:
        - Content
      operationId: getMessages
      parameters:
        - name: receiverId
          in: query
          required: true
          style: form
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          style: form
          schema:
            type: integer
            format: int64
        - name: size
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: unreadOnly
          in: query
          required: true
          style: form
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageDtoPagination"
    post:
      tags:
        - Content
      operationId: sendMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageRequest"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageDto"
  "/messages/{id}":
    post:
      tags:
        - Content
      operationId: markAsRead
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
  /comments/main:
    get:
      tags:
        - Comments
      summary: "get main comments"
      operationId: "getMainCommentList"
      security:
        - {}
        - BearerAuth: []
      parameters:
        - name: "belong_to"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "page"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
      responses:
        "200":
          description: "OK"
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CommentResult"
  /comments/reply:
    get:
      tags:
        - Comments
      summary: "get reply comments"
      operationId: "getReplyCommentList"
      security:
        - {}
        - BearerAuth: []
      parameters:
        - name: "belong_to"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "reply_to"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "page"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
      responses:
        "200":
          description: "OK"
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ReplyResult"
  /comments:
    post:
      tags:
        - Comments
      summary: "post comments"
      operationId: "createComment"
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Comment"
  /comments/{id}:
    delete:
      tags:
        - Comments
      summary: "delete comment"
      operationId: "deleteComment"
      security:
        - BearerAuth: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentRequest"
        required: true
      responses:
        "200":
          description: "OK"
  /comments/action/like/{id}:
    post:
      tags:
        - Comments
      summary: "like comments"
      operationId: "voteComment"
      security:
        - BearerAuth: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
    delete:
      tags:
        - Comments
      summary: "cancel like comments"
      operationId: "cancelVoteComment"
      security:
        - BearerAuth: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
      required:
        - email
        - password
        - name
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    Video:
      type: object
      properties:
        id:
          type: string
          format: int64
        author:
          $ref: "#/components/schemas/User"
        title:
          type: string
        description:
          type: string
        cover_url:
          type: string
        video_url:
          type: string
        is_liked:
          type: boolean
        upload_time:
          type: string
          format: int64
        duration:
          type: integer
          format: int32
      required:
        - id

    GetVideoReply:
      type: object
      properties:
        video:
          $ref: "#/components/schemas/Video"
    GetUserVideosRequest:
      type: object
      properties:
        user_id:
          type: string
          format: int64
          minimum: 0
        limit:
          type: integer
          format: int32
          minimum: 0
        page:
          type: string
          format: int64
          minimum: 0
      required:
        - user_id
    GetLikedVideosRequest:
      type: object
      properties:
        user_id:
          type: string
          format: int64
          minimum: 0
        limit:
          type: integer
          format: int32
          minimum: 0
        page:
          type: string
          format: int64
          minimum: 0
      required:
        - user_id
    GetLikedVideosReply:
      type: object
      properties:
        videos:
          type: array
          items:
            $ref: "#/components/schemas/Video"

    GetRecentVideosRequest:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 0
        page:
          type: string
          format: int64
          minimum: 0
    GetRecentVideosReply:
      type: object
      properties:
        videos:
          type: array
          items:
            $ref: "#/components/schemas/Video"
    UploadVideoResponse:
      type: object
    GetUserVideosReply:
      type: object
      properties:
        videos:
          type: array
          items:
            $ref: "#/components/schemas/Video"
    RegisterReply:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/User"
        token:
          type: string
    LoginReply:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/User"
        token:
          type: string
    FollowActionRequest:
      type: object
      properties:
        user_id:
          type: string
          format: int64
        action:
          type: integer
          format: int32
      required:
        - user_id
        - action

    FollowActionReply:
      type: object

    LikeVideoRequest:
      type: object
      properties:
        video_id:
          type: string
          format: int64
        action:
          type: integer
          format: int32
      required:
        - user_id
        - video_id
        - action
    LikeVideoReply:
      type: object

    UsersPage:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
        all_count:
          type: integer
          format: int32
        next_page:
          type: string
          format: int64
    UpdateProfileResponse:
      type: object
      properties:
        profile:
          $ref: "#/components/schemas/User"
    NewAssetRequest:
      type: object
      properties:
        kind:
          type: string
          oneOf:
            - type: string
              enum:
                - video
                - img
                - avatar
    NewAssetReply:
      type: object
      properties:
        url:
          type: string
          format: uri

    VideoReq:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
        video_url:
          type: string
        cover_url:
          type: string
        tags:
          type: array
          items:
            type: string
    UserProfileReq:
      type: object
      properties:
        name:
          type: string
        bio:
          type: string
        avatar_url:
          type: string
        bg_url:
          type: string
    MessageDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sender_id:
          type: integer
          format: int64
        receiver_id:
          type: integer
          format: int64
        content:
          type: string
          nullable: true
        type:
          type: integer
          format: int32
        read:
          type: boolean
        created_at:
          type: string
          format: date-time
      additionalProperties: false
    MessageDtoPagination:
      type: object
      properties:
        all_count:
          type: integer
          format: int32
        next_page:
          type: integer
          format: int64
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/MessageDto"
          nullable: true
      additionalProperties: false
    MessageRequest:
      type: object
      properties:
        receiver_id:
          type: integer
          format: int64
        content:
          type: string
          nullable: true
        type:
          type: integer
          format: int32
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        is_follow:
          type: boolean
        avatar_url:
          type: string
          nullable: true
        bg_url:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        likes_given:
          type: integer
          format: int32
        likes_received:
          type: integer
          format: int32
        videos_posted:
          type: integer
          format: int32
        following:
          type: integer
          format: int32
        followers:
          type: integer
          format: int32
      additionalProperties: false
    VideoDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          $ref: "#/components/schemas/User"
        title:
          type: string
          nullable: true
        des:
          type: string
          nullable: true
        cover_url:
          type: string
          nullable: true
        video_url:
          type: string
          nullable: true
        duration:
          type: integer
          format: int32
        view_count:
          type: integer
          format: int32
        like_count:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        processed:
          type: integer
          format: int32
        is_liked:
          type: boolean
      additionalProperties: false
    VideoDtoPagination:
      type: object
      properties:
        all_count:
          type: integer
          format: int32
        next_page:
          type: integer
          format: int64
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/VideoDto"
          nullable: true
      additionalProperties: false
    VideoRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        des:
          type: string
          nullable: true
        cover_url:
          type: string
          nullable: true
        video_url:
          type: string
          nullable: true
      additionalProperties: false
    VoteRequest:
      type: object
      properties:
        video_id:
          type: integer
          format: int64
        type:
          type: integer
          format: int32
      additionalProperties: false
    Comment:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        user_id:
          type: "integer"
          format: "int64"
        content:
          type: "string"
        reply_to:
          type: "integer"
          format: "int64"
        belong_to:
          type: "integer"
          format: "int64"
        created_at:
          type: "string"
          format: "date-time"
        reply_count:
          type: "integer"
          format: "int32"
        like_count:
          type: "integer"
          format: "int32"
        reply_comments:
          type: "array"
          items:
            $ref: "#/components/schemas/Comment"
        voted:
          type: "boolean"
        user:
          $ref: "#/components/schemas/User"
    CommentResult:
      type: "object"
      properties:
        all_count:
          type: "integer"
          format: "int32"
        next_page:
          type: "integer"
          format: "int64"
        comments:
          type: "array"
          items:
            $ref: "#/components/schemas/Comment"
    ReplyResult:
      type: "object"
      properties:
        next_page:
          type: "integer"
          format: "int64"
        comments:
          type: "array"
          items:
            $ref: "#/components/schemas/Comment"
    CommentRequest:
      type: "object"
      properties:
        content:
          type: "string"
        reply_to:
          type: "integer"
          format: "int64"
        belong_to:
          type: "integer"
          format: "int64"
