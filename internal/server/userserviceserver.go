// Code generated by gen. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"
	"github.com/sixwaaaay/shauser/internal/logic"
	"github.com/sixwaaaay/shauser/user"
)

type UserServiceServer struct {
	GetUserLogic       *logic.GetUserLogic
	GetUsersLogic      *logic.GetUsersLogic
	LoginLogic         *logic.LoginLogic
	RegisterLogic      *logic.RegisterLogic
	FollowActionLogic  *logic.FollowActionLogic
	GetFollowersLogic  *logic.GetFollowersLogic
	GetFollowingsLogic *logic.GetFollowingsLogic
	GetFriendsLogic    *logic.GetFriendsLogic
	UpdateUserLogic    *logic.UpdateUserLogic
	user.UnimplementedUserServiceServer
}

type ServerOption struct {
	GetUserLogic       *logic.GetUserLogic
	GetUsersLogic      *logic.GetUsersLogic
	LoginLogic         *logic.LoginLogic
	RegisterLogic      *logic.RegisterLogic
	FollowActionLogic  *logic.FollowActionLogic
	GetFollowersLogic  *logic.GetFollowersLogic
	GetFollowingsLogic *logic.GetFollowingsLogic
	GetFriendsLogic    *logic.GetFriendsLogic
	UpdateUserLogic    *logic.UpdateUserLogic
}

func NewUserServiceServer(opt ServerOption) *UserServiceServer {
	return &UserServiceServer{
		GetUserLogic:       opt.GetUserLogic,
		GetUsersLogic:      opt.GetUsersLogic,
		LoginLogic:         opt.LoginLogic,
		RegisterLogic:      opt.RegisterLogic,
		FollowActionLogic:  opt.FollowActionLogic,
		GetFollowersLogic:  opt.GetFollowersLogic,
		GetFollowingsLogic: opt.GetFollowingsLogic,
		GetFriendsLogic:    opt.GetFriendsLogic,
		UpdateUserLogic:    opt.UpdateUserLogic,
	}
}

func (s *UserServiceServer) GetUser(ctx context.Context, in *user.GetUserRequest) (*user.GetUserReply, error) {
	return s.GetUserLogic.GetUser(ctx, in)
}

func (s *UserServiceServer) GetUsers(ctx context.Context, in *user.GetUsersRequest) (*user.GetUsersReply, error) {
	return s.GetUsersLogic.GetUsers(ctx, in)
}

func (s *UserServiceServer) Login(ctx context.Context, in *user.LoginRequest) (*user.LoginReply, error) {
	return s.LoginLogic.Login(ctx, in)
}

func (s *UserServiceServer) Register(ctx context.Context, in *user.RegisterRequest) (*user.RegisterReply, error) {
	return s.RegisterLogic.Register(ctx, in)
}

func (s *UserServiceServer) FollowAction(ctx context.Context, in *user.FollowActionRequest) (*user.FollowActionReply, error) {
	return s.FollowActionLogic.FollowAction(ctx, in)
}

func (s *UserServiceServer) GetFollowers(ctx context.Context, in *user.GetFollowersRequest) (*user.GetFollowersReply, error) {
	return s.GetFollowersLogic.GetFollowers(ctx, in)
}

func (s *UserServiceServer) GetFollowings(ctx context.Context, in *user.GetFollowingsRequest) (*user.GetFollowingsReply, error) {
	return s.GetFollowingsLogic.GetFollowings(ctx, in)
}

func (s *UserServiceServer) GetFriends(ctx context.Context, in *user.GetFriendsRequest) (*user.GetFriendsReply, error) {
	return s.GetFriendsLogic.GetFriends(ctx, in)
}

func (s *UserServiceServer) UpdateUser(ctx context.Context, in *user.UpdateUserRequest) (*user.UpdateUserReply, error) {
	return s.UpdateUserLogic.UpdateUser(ctx, in)
}
