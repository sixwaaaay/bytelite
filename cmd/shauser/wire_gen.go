// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/sixwaaaay/shauser/internal/config"
	"github.com/sixwaaaay/shauser/internal/repository"
	"github.com/sixwaaaay/shauser/internal/logic"
	"github.com/sixwaaaay/shauser/internal/server"
	"go.uber.org/zap"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func NewServer(config2 *config.Config, db *gorm.DB, logger *zap.Logger) *server.UserServiceServer {
	userQuery := repository.NewUserQuery(db, config2, logger)
	followQuery := repository.NewFollowQuery(db)
	usersLogic := logic.NewUsersLogic(userQuery, followQuery, logger)
	userCommand := repository.NewUserCommand(db)
	signLogic := logic.NewSignLogic(userCommand)
	followCommand := repository.NewFollowCommand(db)
	followActionLogic := logic.NewFollowActionLogic(followCommand, logger)
	followQueryLogic := logic.NewFollowQueryLogic(config2, followQuery, userQuery, usersLogic, logger)
	updateUserLogic := logic.NewUpdateUserLogic(userCommand)
	userServiceServer := server.NewUserServiceServer(usersLogic, signLogic, followActionLogic, followQueryLogic, updateUserLogic)
	return userServiceServer
}
